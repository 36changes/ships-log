{"version":3,"sources":["constants.js","components/Account/index.js","components/Order/index.js","components/Log/index.js","components/App/index.js","index.js"],"names":["web3Provider","web3","window","currentProvider","node_modules_web3","HttpProvider","web3Singleton","fromWei","wei","Account_Account","_this$props","this","props","account","showImage","_username","user","username","_address","address","displayName","substring","MAX_ADDR_LEN","toUpperCase","react_default","a","createElement","target","rel","href","concat","style","backgroundImage","image","Component","Card","styled_components_browser_esm","div","attrs","className","_templateObject","Order_Order","state","errorMessage","creatingOrder","order","accountAddress","alert","setState","seaport","fulfillOrder","_this2","priceLabel","currentPrice","toFixed","buyAsset","Order_asyncToGenerator","regenerator_default","_callee2","wrap","_context2","prev","next","stop","_ref","apply","arguments","disabled","onClick","_this3","canAccept","length","undefined","sellAsset","_callee3","_context3","abrupt","_ref2","expirationTime","parseFloat","timeLeft","moment_default","duration","unix","diff","humanize","_this$props2","makerAccount","listingTime","asset","ts","toNumber","timeLabel","local","fromNow","isOwner","toLowerCase","owner","openseaLink","alt","src","imageUrl","name","assetContract","tokenId","role","side","types","Buy","renderAcceptOfferButton","Sell","renderBuyButton","Log_Log","orders","total","page","fetchData","api","getOrders","count","_this4","paginateTo","tabIndex","_this5","sellSide","buySide","id","type","data-toggle","toggleSide","Fragment","map","i","Object","assign","key","renderPagination","Header","header","App_templateObject","ImgRibbon","img","_templateObject2","App_App","App","_this","App_classCallCheck","App_possibleConstructorReturn","App_getPrototypeOf","call","lib","network","Main","eth","getAccounts","err","res","gtag","dataLayer","push","Date","react_dom_default","render","document","getElementById"],"mappings":"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","file":"static/js/main.e96bda8a.chunk.js","sourcesContent":["import * as Web3 from 'web3';\n\nexport const GOOGLE_ANALYTICS_ID = 'UA-111688253-4'\nexport const OPENSEA_URL = \"https://opensea.io\"\nexport const OPENSEA_JS_URL = \"https://github.com/ProjectOpenSea/opensea-js\"\nexport const GITHUB_URL = \"https://github.com/ProjectOpenSea/ships-log\"\nexport const web3Provider = typeof web3 !== 'undefined'\n  ? window.web3.currentProvider\n  : new Web3.providers.HttpProvider('https://mainnet.infura.io')\nexport const web3Singleton = new Web3(web3Provider)\n\nexport function fromWei(wei) {\n  return +(web3Singleton.fromWei(wei))\n}\n\nexport async function promisify(inner) {\n  return new Promise((resolve, reject) =>\n    inner((err, res) => {\n      if (err) { reject(err) }\n      resolve(res)\n    })\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { OPENSEA_URL } from '../../constants';\nconst MAX_ADDR_LEN = 6\n\nexport default class Account extends React.Component {\n\n  static propTypes = {\n    account: PropTypes.shape({\n      address: PropTypes.string.isRequired,\n      user: PropTypes.shape({\n        username: PropTypes.string.isRequired\n      })\n    }).isRequired,\n    showImage: PropTypes.bool\n  }\n\n  render() {\n    const { account, showImage } = this.props;\n    const _username = account.user\n      ? account.user.username\n      : null;\n    const _address = account.address;\n    const displayName = _username ? _username : _address.substring(2, MAX_ADDR_LEN + 2).toUpperCase();\n\n    return (\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${OPENSEA_URL}/accounts/${_address}`}>\n        {showImage && account\n          ? <div style={{backgroundImage:'url(\"'+account.image+'\")'}} />\n          : null\n        }\n        <span>{displayName}</span>\n      </a>\n    )\n  }\n}\n","import React from 'react'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport Account from '../Account'\nimport styled from 'styled-components';\nimport { fromWei } from '../../constants';\nimport { OrderSide } from 'opensea-js/lib/types';\n\nconst Card = styled.div.attrs({ className: \"card mx-2 mb-4\" })`\n  min-width: 200px;\n  img {\n    display: block;\n    height: 120px;\n    max-width: 100%;\n  }\n`\n\nexport default class Order extends React.Component {\n\n  state = {\n    errorMessage: null,\n    creatingOrder: false\n  }\n\n  static propTypes = {\n    currentAccount: PropTypes.object,\n    order: PropTypes.shape({\n      makerAccount: PropTypes.object.isRequired\n    }).isRequired,\n    seaport: PropTypes.object.isRequired,\n    accountAddress: PropTypes.string\n  }\n\n  async fulfillOrder() {\n    const { order, accountAddress } = this.props\n    if (!accountAddress) {\n      return alert('You need an Ethereum wallet to interact with this marketplace. Unlock your wallet, get MetaMask.io on desktop, or get Trust Wallet or Coinbase Wallet on mobile.')\n    }\n    try {\n      this.setState({ creatingOrder: true })\n      await this.props.seaport.fulfillOrder({ order, accountAddress })\n    } catch(error) {\n      // Handle error here\n      throw error\n    } finally {\n      this.setState({ creatingOrder: false })\n    }\n  }\n\n  renderBuyButton() {\n    const { creatingOrder } = this.state\n    const { currentPrice } = this.props.order\n    const priceLabel = fromWei(currentPrice).toFixed(3)\n    const buyAsset = async () => {\n      this.fulfillOrder()\n    }\n    return (\n      <button\n        disabled={creatingOrder}\n        onClick={buyAsset}\n        className=\"btn btn-primary w-100\">Buy{creatingOrder ? \"ing\" : \"\"} for Ξ{priceLabel}\n      </button>\n    )\n  }\n\n  renderAcceptOfferButton(canAccept = true) {\n    const { creatingOrder } = this.state\n    const { accountAddress } = this.props\n    const { currentPrice } = this.props.order\n    const priceLabel = fromWei(currentPrice).toFixed(3)\n    const sellAsset = async () => {\n      if (accountAddress && !canAccept) {\n        this.setState({\n          errorMessage: \"You do not own this asset!\"\n        })\n        return\n      }\n      this.fulfillOrder()\n    }\n    return (\n      <button\n        disabled={creatingOrder}\n        onClick={sellAsset}\n        className={`btn btn-success w-100`}>Sell{creatingOrder ? \"ing\" : \"\"} for Ξ{priceLabel}\n      </button>\n    )\n  }\n\n  renderExpirationBadge() {\n    const expirationTime = parseFloat(this.props.order.expirationTime)\n\n    if (expirationTime <= 0) {\n      return null;\n    }\n\n    const timeLeft = moment.duration(moment.unix(expirationTime).diff(moment()))\n\n    return (\n      <span className=\"badge bid-expiry-badge red\">\n        <i className=\"tiny material-icons\">timer</i>\n        <span className=\"expire-label\">Expires in </span>\n        {timeLeft.humanize()}\n      </span>\n    )\n  }\n\n  render() {\n    const { errorMessage } = this.state\n    const { order, accountAddress } = this.props\n    const { makerAccount, listingTime, asset } = order\n\n    const ts = listingTime.toNumber() * 1000\n    const timeLabel = moment(ts).local().fromNow()\n    const isOwner = accountAddress && accountAddress.toLowerCase() === asset.owner.address.toLowerCase()\n\n    return (\n      <Card>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"d-inline-block m-100\" href={asset.openseaLink}>\n          <img\n            className=\"mx-auto\"\n            alt=\"Asset artwork\"\n            src={asset.imageUrl} />\n        </a>\n          \n        <div className=\"card-body h-25\">\n          <h5 className=\"card-title\">{asset.name}</h5>\n          <p className=\"card-text text-truncate\">\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={asset.openseaLink} className=\"card-link\">{asset.assetContract.name} #{asset.tokenId}</a>\n          </p>\n        </div>\n        \n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            Offered by <Account account={makerAccount} />\n          </li>\n          { errorMessage\n            ? <div className=\"alert alert-warning mb-0\" role=\"alert\">\n                {errorMessage}\n              </div>\n            : <li className=\"list-group-item\">\n                {order.side === OrderSide.Buy\n                  ? isOwner\n                    ? this.renderAcceptOfferButton()\n                    : this.renderAcceptOfferButton(false)\n                  : null\n                }\n                {!isOwner && order.side === OrderSide.Sell\n                  ? this.renderBuyButton()\n                  : null\n                }\n              </li>\n          }\n        </ul>\n        <div className=\"card-footer\">\n          <small className=\"text-muted\">Posted {timeLabel}</small>\n        </div>\n      </Card>\n    )\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Order from '../Order';\nimport { OrderSide } from 'opensea-js/lib/types';\n\nexport default class Log extends React.Component {\n  static propTypes = {\n    seaport: PropTypes.object.isRequired,\n    accountAddress: PropTypes.string\n  };\n\n  state = {\n    orders: [],\n    total: 0,\n    side: undefined,\n    page: 1\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  async fetchData() {\n    const { orders, count } = await this.props.seaport.api.getOrders({\n      // Possible query options:\n      // 'asset_contract_address'\n      // 'maker'\n      // 'taker'\n      // 'owner'\n      // 'token_id'\n      // 'token_ids'\n      // 'sale_kind'\n      side: this.state.side\n    }, this.state.page)\n\n    this.setState({ orders, total: count })\n  }\n\n  paginateTo(page) {\n    this.setState({ orders: [], page }, () => this.fetchData())\n  }\n\n  toggleSide(side) {\n    if (this.state.side === side) {\n      side = undefined\n    }\n    this.setState({ orders: [], side }, () => this.fetchData())\n  }\n\n  renderPagination() {\n    return (\n      <nav>\n        <ul className=\"pagination justify-content-center\">\n          <li className={\"page-item \" + (this.state.page === 1 ? \"disabled\" : \"\")}>\n            <a className=\"page-link\" href=\"#Log\"\n              onClick={() => this.paginateTo(this.state.page - 1)} tabIndex=\"-1\">\n              Previous\n            </a>\n          </li>\n          <li className=\"page-item\">\n            <a className=\"page-link\" href=\"#Log\"\n              onClick={() => this.paginateTo(this.state.page + 1)}>\n              Next\n            </a>\n          </li>\n        </ul>\n      </nav>\n    )\n  }\n\n  render() {\n    const { orders } = this.state;\n\n    const sellSide = this.state.side === OrderSide.Sell\n    const buySide = this.state.side === OrderSide.Buy\n\n    return (\n      <div className=\"container py-3\" id=\"Log\">\n        <div className=\"mb-3\">\n          Filter by type:\n          <div className=\"btn-group ml-4\" role=\"group\">\n            <button type=\"button\" className={\"btn btn-outline-primary \" + (sellSide ? \"active\" : \"\")} data-toggle=\"button\" onClick={() => this.toggleSide(OrderSide.Sell)}>\n              Sales\n            </button>\n            <button type=\"button\" className={\"btn btn-outline-success \" + (buySide ? \"active\" : \"\")} data-toggle=\"button\" onClick={() => this.toggleSide(OrderSide.Buy)}>\n              Bids\n            </button>\n          </div>\n        </div>\n        {orders.length > 0\n          ? <React.Fragment>\n              <div className=\"card-deck\">\n                {orders.map((order, i) => {\n                  return <Order {...this.props} key={i} order={order}  />\n                })}\n              </div>\n              {this.renderPagination()}\n            </React.Fragment>\n          : <div className=\"text-center\">Loading...</div>\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Log from '../Log'\nimport { OpenSeaPort, Network } from 'opensea-js';\nimport { web3Provider, OPENSEA_JS_URL, GITHUB_URL } from '../../constants';\n\nconst Header = styled.header`\n  border-bottom: 1px solid lightgrey;\n  padding: 10px;\n  text-align: center;\n  background-color: #f4f9fd;\n\n  h6 img {\n    width: 24px;\n  }\n`\n\nconst ImgRibbon = styled.img`\n  width: 150px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  border: 0;\n\n  @media(max-width: 600px) {\n    width: 80px;\n  }\n`\n\nexport default class App extends React.Component {\n\n  state = {\n    accountAddress: null\n  }\n\n  constructor(props) {\n    super(props)\n    this.seaport = new OpenSeaPort(web3Provider, {\n      network: Network.Main\n    })\n    this.web3 = this.seaport.web3\n  }\n\n  componentDidMount() {\n    this.accountAddress = this.web3.eth.getAccounts((err, res) => {\n      this.setState({\n        accountAddress: res[0]\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <a href={GITHUB_URL}>\n          <ImgRibbon src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png\" alt=\"Fork me on GitHub\" />\n        </a>\n        <Header>\n          <h1>\n            The Ship's Log\n          </h1>\n          <h6>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={OPENSEA_JS_URL}>\n              <img alt=\"OpenSea logo\" className=\"mr-2\" src=\"/opensea-logo.png\" />OpenSea.js\n            </a> example dapp\n          </h6>\n        </Header>\n        <main>\n          <Log\n            seaport={this.seaport}\n            accountAddress={this.state.accountAddress} />\n        </main>\n      </div>\n    )\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\nimport { GOOGLE_ANALYTICS_ID } from './constants';\n\n// Google Analytics loading\nif (process.env.NODE_ENV === \"production\") {\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){window.dataLayer.push(arguments);}\n  gtag('js', new Date());\n  gtag('config', GOOGLE_ANALYTICS_ID);\n} else {\n  console.info(\"Not loading Google Analytics in \" + process.env.NODE_ENV + \" environment\")\n}\n\n// Main render action\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}