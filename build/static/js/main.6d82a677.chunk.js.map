{"version":3,"sources":["constants.js","components/Account/index.js","components/Order/index.js","components/Log/index.js","components/App/index.js","index.js"],"names":["web3Provider","web3","window","currentProvider","node_modules_web3","HttpProvider","web3Singleton","fromWei","wei","NO_WALLET_ALERT","Account_Account","_this$props","this","props","account","showImage","_username","user","username","_address","address","displayName","substring","MAX_ADDR_LEN","toUpperCase","react_default","a","createElement","target","rel","href","concat","style","backgroundImage","image","Component","Card","styled_components_browser_esm","div","attrs","className","_templateObject","Order_Order","state","errorMessage","creatingOrder","error","_this2","setState","message","setTimeout","order","accountAddress","alert","seaport","fulfillOrder","onError","_context","t0","_this3","canAccept","arguments","length","undefined","priceLabel","currentPrice","toFixed","buyAsset","Order_asyncToGenerator","regenerator_default","_callee2","wrap","_context2","prev","next","abrupt","stop","_ref","apply","disabled","onClick","_this4","sellAsset","_callee3","_context3","_ref2","expirationTime","parseFloat","timeLeft","moment_default","duration","unix","diff","humanize","_this$props2","makerAccount","listingTime","asset","ts","toNumber","timeLabel","local","fromNow","isOwner","toLowerCase","owner","openseaLink","alt","src","imageUrl","name","assetContract","tokenId","role","side","types","Buy","renderAcceptOfferButton","Sell","renderBuyButton","Log_Log","orders","total","onlyForMe","onlyByMe","page","fetchData","api","getOrders","maker","count","_this5","_this6","_this$state","ordersPerPage","pageSize","noMorePages","paginateTo","tabIndex","_this7","_this$state2","sellSide","buySide","type","data-toggle","toggleSide","toggleForMe","toggleByMe","_this8","id","renderFilters","Fragment","map","i","Object","assign","key","renderPagination","Header","header","App_templateObject","ImgRibbon","img","_templateObject2","App_App","App","_this","App_classCallCheck","App_possibleConstructorReturn","App_getPrototypeOf","call","lib","network","Main","eth","getAccounts","err","res","gtag","dataLayer","push","Date","react_dom_default","render","document","getElementById"],"mappings":"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","file":"static/js/main.6d82a677.chunk.js","sourcesContent":["import * as Web3 from 'web3';\n\nexport const GOOGLE_ANALYTICS_ID = 'UA-111688253-4'\nexport const OPENSEA_URL = \"https://opensea.io\"\nexport const OPENSEA_JS_URL = \"https://github.com/ProjectOpenSea/opensea-js\"\nexport const GITHUB_URL = \"https://github.com/ProjectOpenSea/ships-log\"\nexport const web3Provider = typeof web3 !== 'undefined'\n  ? window.web3.currentProvider\n  : new Web3.providers.HttpProvider('https://mainnet.infura.io')\nexport const web3Singleton = new Web3(web3Provider)\n\nexport function fromWei(wei) {\n  return +(web3Singleton.fromWei(wei))\n}\n\nexport const NO_WALLET_ALERT = 'You need an Ethereum wallet to interact with this marketplace. Unlock your wallet, get MetaMask.io on desktop, or get Trust Wallet or Coinbase Wallet on mobile.'\n\nexport async function promisify(inner) {\n  return new Promise((resolve, reject) =>\n    inner((err, res) => {\n      if (err) { reject(err) }\n      resolve(res)\n    })\n  )\n}\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport { OPENSEA_URL } from '../../constants';\nconst MAX_ADDR_LEN = 6\n\nexport default class Account extends React.Component {\n\n  static propTypes = {\n    account: PropTypes.shape({\n      address: PropTypes.string.isRequired,\n      user: PropTypes.shape({\n        username: PropTypes.string.isRequired\n      })\n    }).isRequired,\n    showImage: PropTypes.bool\n  }\n\n  render() {\n    const { account, showImage } = this.props;\n    const _username = account.user\n      ? account.user.username\n      : null;\n    const _address = account.address;\n    const displayName = _username ? _username : _address.substring(2, MAX_ADDR_LEN + 2).toUpperCase();\n\n    return (\n      <a target=\"_blank\" rel=\"noopener noreferrer\" href={`${OPENSEA_URL}/accounts/${_address}`}>\n        {showImage && account\n          ? <div style={{backgroundImage:'url(\"'+account.image+'\")'}} />\n          : null\n        }\n        <span>{displayName}</span>\n      </a>\n    )\n  }\n}\n","import React from 'react'\nimport moment from 'moment'\nimport PropTypes from 'prop-types'\nimport Account from '../Account'\nimport styled from 'styled-components';\nimport { fromWei, NO_WALLET_ALERT } from '../../constants';\nimport { OrderSide } from 'opensea-js/lib/types';\n\nconst Card = styled.div.attrs({ className: \"card mx-2 mb-4\" })`\n  min-width: 200px;\n  img {\n    display: block;\n    height: 120px;\n    max-width: 100%;\n  }\n`\n\nexport default class Order extends React.Component {\n\n  state = {\n    errorMessage: null,\n    creatingOrder: false\n  }\n\n  static propTypes = {\n    currentAccount: PropTypes.object,\n    order: PropTypes.shape({\n      makerAccount: PropTypes.object.isRequired\n    }).isRequired,\n    seaport: PropTypes.object.isRequired,\n    accountAddress: PropTypes.string\n  }\n\n  onError(error) {\n    // Ideally, you'd handle this error at a higher-level component\n    // using props or Redux\n    this.setState({ errorMessage: error.message })\n    setTimeout(() => this.setState({errorMessage: null}), 3000)\n    throw error\n  }\n\n  async fulfillOrder() {\n    const { order, accountAddress } = this.props\n    if (!accountAddress) {\n      return alert(NO_WALLET_ALERT)\n    }\n    try {\n      this.setState({ creatingOrder: true })\n      await this.props.seaport.fulfillOrder({ order, accountAddress })\n    } catch(error) {\n      this.onError(error)\n    } finally {\n      this.setState({ creatingOrder: false })\n    }\n  }\n\n  renderBuyButton(canAccept = true) {\n    const { creatingOrder } = this.state\n    const { accountAddress } = this.props\n    const { currentPrice } = this.props.order\n    const priceLabel = fromWei(currentPrice).toFixed(3)\n    const buyAsset = async () => {\n      if (accountAddress && !canAccept) {\n        this.setState({\n          errorMessage: \"You already own this asset!\"\n        })\n        return\n      }\n      this.fulfillOrder()\n    }\n    return (\n      <button\n        disabled={creatingOrder}\n        onClick={buyAsset}\n        className=\"btn btn-primary w-100\">Buy{creatingOrder ? \"ing\" : \"\"} for Ξ{priceLabel}\n      </button>\n    )\n  }\n\n  renderAcceptOfferButton(canAccept = true) {\n    const { creatingOrder } = this.state\n    const { accountAddress } = this.props\n    const { currentPrice } = this.props.order\n    const priceLabel = fromWei(currentPrice).toFixed(3)\n    const sellAsset = async () => {\n      if (accountAddress && !canAccept) {\n        this.setState({\n          errorMessage: \"You do not own this asset!\"\n        })\n        return\n      }\n      this.fulfillOrder()\n    }\n    return (\n      <button\n        disabled={creatingOrder}\n        onClick={sellAsset}\n        className={`btn btn-success w-100`}>Sell{creatingOrder ? \"ing\" : \"\"} for Ξ{priceLabel}\n      </button>\n    )\n  }\n\n  renderExpirationBadge() {\n    const expirationTime = parseFloat(this.props.order.expirationTime)\n\n    if (expirationTime <= 0) {\n      return null;\n    }\n\n    const timeLeft = moment.duration(moment.unix(expirationTime).diff(moment()))\n\n    return (\n      <span className=\"badge bid-expiry-badge red\">\n        <i className=\"tiny material-icons\">timer</i>\n        <span className=\"expire-label\">Expires in </span>\n        {timeLeft.humanize()}\n      </span>\n    )\n  }\n\n  render() {\n    const { errorMessage } = this.state\n    const { order, accountAddress } = this.props\n    const { makerAccount, listingTime, asset } = order\n\n    const ts = listingTime.toNumber() * 1000\n    const timeLabel = moment(ts).local().fromNow()\n    const isOwner = accountAddress && accountAddress.toLowerCase() === asset.owner.address.toLowerCase()\n\n    return (\n      <Card>\n        <a target=\"_blank\" rel=\"noopener noreferrer\" className=\"d-inline-block m-100\" href={asset.openseaLink}>\n          <img\n            className=\"mx-auto\"\n            alt=\"Asset artwork\"\n            src={asset.imageUrl} />\n        </a>\n          \n        <div className=\"card-body h-25\">\n          <h5 className=\"card-title\">{asset.name}</h5>\n          <p className=\"card-text text-truncate\">\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={asset.openseaLink} className=\"card-link\">{asset.assetContract.name} #{asset.tokenId}</a>\n          </p>\n        </div>\n        \n        <ul className=\"list-group list-group-flush\">\n          <li className=\"list-group-item\">\n            Offered by <Account account={makerAccount} />\n          </li>\n          { errorMessage\n            ? <div className=\"alert alert-warning mb-0\" role=\"alert\">\n                {errorMessage}\n              </div>\n            : <li className=\"list-group-item\">\n                {order.side === OrderSide.Buy\n                  ? this.renderAcceptOfferButton(isOwner)\n                  : null\n                }\n                {order.side === OrderSide.Sell\n                  ? this.renderBuyButton(!isOwner)\n                  : null\n                }\n              </li>\n          }\n        </ul>\n        <div className=\"card-footer\">\n          <small className=\"text-muted\">Posted {timeLabel}</small>\n        </div>\n      </Card>\n    )\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport Order from '../Order';\nimport { OrderSide } from 'opensea-js/lib/types';\nimport { NO_WALLET_ALERT } from '../../constants';\n\nexport default class Log extends React.Component {\n  static propTypes = {\n    seaport: PropTypes.object.isRequired,\n    accountAddress: PropTypes.string\n  };\n\n  state = {\n    orders: [],\n    total: 0,\n    side: undefined,\n    onlyForMe: false,\n    onlyByMe: false,\n    page: 1\n  };\n\n  componentDidMount() {\n    this.fetchData();\n  }\n\n  async fetchData() {\n    const { accountAddress } = this.props\n    const { orders, count } = await this.props.seaport.api.getOrders({\n      maker: this.state.onlyByMe ? accountAddress : undefined,\n      owner: this.state.onlyForMe ? accountAddress : undefined,\n      side: this.state.side\n      // Possible query options:\n      // 'asset_contract_address'\n      // 'taker'\n      // 'token_id'\n      // 'token_ids'\n      // 'sale_kind'\n      \n    }, this.state.page)\n\n    this.setState({ orders, total: count })\n  }\n\n  paginateTo(page) {\n    this.setState({ orders: [], page }, () => this.fetchData())\n  }\n\n  toggleSide(side) {\n    if (this.state.side === side) {\n      side = undefined\n    }\n    this.setState({\n      orders: [],\n      side,\n      onlyForMe: undefined\n    }, () => this.fetchData())\n  }\n\n  toggleForMe() {\n    const { accountAddress } = this.props\n    if (!accountAddress) {\n      return alert(NO_WALLET_ALERT)\n    }\n    const { onlyForMe } = this.state\n    this.setState( {\n      orders: [],\n      onlyForMe: !onlyForMe,\n      onlyByMe: false,\n      // Doesn't make sense to show sell orders the user makes\n      side: onlyForMe ? undefined : OrderSide.Buy,\n    }, () => this.fetchData())\n  }\n\n  toggleByMe() {\n    const { accountAddress } = this.props\n    if (!accountAddress) {\n      return alert(NO_WALLET_ALERT)\n    }\n    const { onlyByMe } = this.state\n    this.setState( {\n      orders: [],\n      onlyByMe: !onlyByMe,\n      onlyForMe: false\n    }, () => this.fetchData())\n  }\n\n  renderPagination() {\n    const { page, total } = this.state\n    const ordersPerPage = this.props.seaport.api.pageSize\n    const noMorePages = page*ordersPerPage >= total\n    return (\n      <nav>\n        <ul className=\"pagination justify-content-center\">\n          <li className={\"page-item \" + (page === 1 ? \"disabled\" : \"\")}>\n            <a className=\"page-link\" href=\"#Log\"\n              onClick={() => this.paginateTo(page - 1)} tabIndex=\"-1\">\n              Previous\n            </a>\n          </li>\n          <li className={\"page-item \" + (noMorePages ? \"disabled\" : \"\")}>\n            <a className=\"page-link\" href=\"#Log\"\n              onClick={() => this.paginateTo(page + 1)}>\n              Next\n            </a>\n          </li>\n        </ul>\n      </nav>\n    )\n  }\n\n  renderFilters() {\n    const { onlyByMe, onlyForMe } = this.state\n    const sellSide = this.state.side === OrderSide.Sell\n    const buySide = this.state.side === OrderSide.Buy\n\n    return (\n      <div className=\"row\">\n        <div className=\"mb-3 ml-4\">\n          Filter orderbook:\n          <div className=\"btn-group ml-4\" role=\"group\">\n            <button type=\"button\" className={\"btn btn-outline-primary \" + (sellSide ? \"active\" : \"\")} data-toggle=\"button\" onClick={() => this.toggleSide(OrderSide.Sell)}>\n              Sales\n            </button>\n            <button type=\"button\" className={\"btn btn-outline-success \" + (buySide ? \"active\" : \"\")} data-toggle=\"button\" onClick={() => this.toggleSide(OrderSide.Buy)}>\n              Bids\n            </button>\n          </div>\n        </div>\n        <div className=\"mb-3 ml-4\">\n          <div className=\"btn-group\" role=\"group\">\n            <button type=\"button\" className={\"btn btn-outline-secondary \" + (onlyForMe ? \"active\" : \"\")} data-toggle=\"button\" onClick={() => this.toggleForMe()}>\n              For Me\n            </button>\n            <button type=\"button\" className={\"btn btn-outline-secondary \" + (onlyByMe ? \"active\" : \"\")} data-toggle=\"button\" onClick={() => this.toggleByMe()}>\n              By Me\n            </button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n  render() {\n    const { orders } = this.state\n\n    return (\n      <div className=\"container py-3\" id=\"Log\">\n\n        {this.renderFilters()}\n\n        {orders.length > 0\n        \n          ? <React.Fragment>\n              <div className=\"card-deck\">\n                {orders.map((order, i) => {\n                  return <Order {...this.props} key={i} order={order}  />\n                })}\n              </div>\n              {this.renderPagination()}\n            </React.Fragment>\n\n          : <div className=\"text-center\">Loading...</div>\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport styled from 'styled-components';\nimport Log from '../Log'\nimport { OpenSeaPort, Network } from 'opensea-js';\nimport { web3Provider, OPENSEA_JS_URL, GITHUB_URL } from '../../constants';\n\nconst Header = styled.header`\n  border-bottom: 1px solid lightgrey;\n  padding: 10px;\n  text-align: center;\n  background-color: #f4f9fd;\n\n  h6 img {\n    width: 24px;\n  }\n`\n\nconst ImgRibbon = styled.img`\n  width: 150px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  border: 0;\n\n  @media(max-width: 600px) {\n    width: 80px;\n  }\n`\n\nexport default class App extends React.Component {\n\n  state = {\n    accountAddress: null\n  }\n\n  constructor(props) {\n    super(props)\n    this.seaport = new OpenSeaPort(web3Provider, {\n      network: Network.Main\n    })\n    this.web3 = this.seaport.web3\n  }\n\n  componentDidMount() {\n    this.accountAddress = this.web3.eth.getAccounts((err, res) => {\n      this.setState({\n        accountAddress: res[0]\n      })\n    })\n  }\n\n  render() {\n    return (\n      <div>\n        <a href={GITHUB_URL}>\n          <ImgRibbon src=\"https://s3.amazonaws.com/github/ribbons/forkme_right_darkblue_121621.png\" alt=\"Fork me on GitHub\" />\n        </a>\n        <Header>\n          <h1>\n            The Ship's Log\n          </h1>\n          <h6>\n            <a target=\"_blank\" rel=\"noopener noreferrer\" href={OPENSEA_JS_URL}>\n              <img alt=\"OpenSea logo\" className=\"mr-2\" src=\"/opensea-logo.png\" />OpenSea.js\n            </a> example dapp\n          </h6>\n        </Header>\n        <main>\n          <Log\n            seaport={this.seaport}\n            accountAddress={this.state.accountAddress} />\n        </main>\n      </div>\n    )\n  }\n}\n","import 'bootstrap/dist/css/bootstrap.min.css';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/App';\nimport './index.css';\nimport { GOOGLE_ANALYTICS_ID } from './constants';\n\n// Google Analytics loading\nif (process.env.NODE_ENV === \"production\") {\n  window.dataLayer = window.dataLayer || [];\n  function gtag(){window.dataLayer.push(arguments);}\n  gtag('js', new Date());\n  gtag('config', GOOGLE_ANALYTICS_ID);\n} else {\n  console.info(\"Not loading Google Analytics in \" + process.env.NODE_ENV + \" environment\")\n}\n\n// Main render action\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}